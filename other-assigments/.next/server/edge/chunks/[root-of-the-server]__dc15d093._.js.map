{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport type { NextRequest } from \"next/server\";\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  const isAuth = request.cookies.get(\"auth\")?.value === \"true\";\n\n  // Protected routes\n  const protectedRoutes = [\"/assigment_7/dashboard\", \"/assigment_7/profile\"];\n\n  // If not authenticated and trying to access protected route, redirect to login\n  if (!isAuth && protectedRoutes.some((route) => pathname.startsWith(route))) {\n    return NextResponse.redirect(new URL(\"/assigment_7/login\", request.url));\n  }\n\n  // If authenticated and trying to access login, redirect to dashboard\n  if (isAuth && pathname.startsWith(\"/assigment_7/login\")) {\n    return NextResponse.redirect(\n      new URL(\"/assigment_7/dashboard\", request.url)\n    );\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\"/assigment_7/:path*\"],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IACpC,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC,SAAS,UAAU;IAEtD,mBAAmB;IACnB,MAAM,kBAAkB;QAAC;QAA0B;KAAuB;IAE1E,+EAA+E;IAC/E,IAAI,CAAC,UAAU,gBAAgB,IAAI,CAAC,CAAC,QAAU,SAAS,UAAU,CAAC,SAAS;QAC1E,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,sBAAsB,QAAQ,GAAG;IACxE;IAEA,qEAAqE;IACrE,IAAI,UAAU,SAAS,UAAU,CAAC,uBAAuB;QACvD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAC1B,IAAI,IAAI,0BAA0B,QAAQ,GAAG;IAEjD;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAsB;AAClC"}}]
}